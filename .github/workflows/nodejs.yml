name: Node CI

on: [push, pull_request, release]

jobs:
  test_unit:
    name: Unit Tests with ${{ matrix.node }} on ${{ matrix.os }}
    strategy:
      matrix:
        node: [10, 12]
        os: [ubuntu-latest, windows-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}
    - name: Install yarn
      run: npm i -g yarn
    - name: Install packages via yarn
      run: yarn --non-interactive --frozen-lockfile
    - name: Unit Tests & Code Coverage (Unix & Mac)
      if: matrix.os != 'windows-latest'
      uses: paambaati/codeclimate-action@v2.3.0
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      with:
        coverageCommand: yarn test:unit:coverage
    - name: Unit Test & Code Coverafe (Windows)
      if: matrix.os == 'windows-latest'
      run: yarn test:unit:coverage
  build:
    name: Building Application with ${{ matrix.node }} on ${{ matrix.os }}
    needs: [test_unit]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: [10, 12]
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}
    - name: Install yarn
      run: npm i -g yarn
    - name: Install packages via yarn
      run: yarn --non-interactive --frozen-lockfile
    - name: Build the Application
      if: github.event_name != 'release'
      run: yarn build --publish=never
    - name: Build the Application and Publish
      if: github.event_name == 'release'
      run: yarn build --publish=always
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}