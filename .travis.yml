language: node_js

matrix:
  include:
    - os: osx
      osx_image: xcode10.2
      language: node_js
      node_js: "10"
      env: ELECTRON_CACHE=$HOME/.cache/electron ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder DO_COVERAGE=true

    - os: linux
      language: node_js
      node_js: "10"
      env: DO_COVERAGE=true

    - os: linux
      services: docker
      language: generic
      env: IS_DOCKER=true DO_COVERAGE=false
  allow_failures:
    - env: IS_DOCKER=true

cache:
  yarn: true
  directories:
    - node_modules
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder

notifications:
  email: false

before_script:
  - |
    if [ "$DO_COVERAGE" == "true" ]; then
      curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      chmod +x ./cc-test-reporter
      ./cc-test-reporter before-build
    fi

script:
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      if [ "$IS_DOCKER" == "true" ]; then
        docker run --rm \
          --env-file <(env | grep -vE '\r|\n' | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS|APPVEYOR_|CSC_|_TOKEN|_KEY|AWS_|STRIP|BUILD_') \
          -v ${PWD}:/project \
          -v ~/.cache/electron:/root/.cache/electron \
          -v ~/.cache/electron-builder:/root/.cache/electron-builder \
          electronuserland/builder:wine \
          /bin/bash -c "yarn install --link-duplicates --pure-lockfile && yarn test:unit && yarn build --publish=onTag --linux --win"
      else
        yarn
        yarn test:unit:coverage
        yarn build --publish=onTag --linux
      fi
    else
      yarn
      yarn test:unit:coverage
      yarn build --publish=onTag --mac
    fi

after_script:
  - |
    if [ "$DO_COVERAGE" == "true" ]; then
      ./cc-test-reporter after-build
    fi

before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine
